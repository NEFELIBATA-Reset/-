
import java.util.*;

public class Level {
    private static class TreeNode{
        char val;
        TreeNode left;
        TreeNode right;
        TreeNode(char val){
            this.val=val;
        }
        public String toString(){
            return String.format("%d",val);
        }
    }
    //建立二叉树
    public static TreeNode buildTree(){
        TreeNode a=new TreeNode('A');
        TreeNode b=new TreeNode('B');
        TreeNode c=new TreeNode('C');
        TreeNode d=new TreeNode('D');
        TreeNode e=new TreeNode('E');
        TreeNode f=new TreeNode('F');
        a.left=b;a.right=c;
        b.left=d;c.left=e;c.right=f;
        return a;
    }

    public static List<List<Character>> levelOrder(TreeNode root) {
        List<List<Character>> list=new ArrayList<>();
        if(root==null){
            return list;
        }
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.add(root);
        while(!queue.isEmpty()){
            int count=queue.size();
            List<Character> list1=new ArrayList<>();
            while(count>0){
                TreeNode node=queue.poll();
                list1.add(node.val);
                if(node.left!=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
                count--;
            }
            list.add(list1);
        }
        return list;
    }

    public static void main(String[] args) {
        TreeNode root=buildTree();
        System.out.println(levelOrder(root));
    }
}
